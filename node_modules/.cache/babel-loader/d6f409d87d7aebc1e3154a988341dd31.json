{"ast":null,"code":"import { createStore } from \"redux\";\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    counter: 0,\n    showCounter: true\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        counter: state.counter + 1\n      };\n\n    case \"DECREMENT\":\n      return {\n        counter: state.counter - 1\n      };\n\n    case \"increase\":\n      return {\n        counter: state.counter + action.amount\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createStore","counterReducer","state","counter","showCounter","action","type","amount","store"],"sources":["/home/levan/Desktop/01-starting-project/src/store/index.js"],"sourcesContent":["import { createStore } from \"redux\";\n\nconst counterReducer = (state = { counter: 0, showCounter: true }, action) => {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        counter: state.counter + 1,\n      };\n    case \"DECREMENT\":\n      return {\n        counter: state.counter - 1,\n      };\n    case \"increase\":\n      return {\n        counter: state.counter + action.amount,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(counterReducer);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;;AAEA,MAAMC,cAAc,GAAG,YAAuD;EAAA,IAAtDC,KAAsD,uEAA9C;IAAEC,OAAO,EAAE,CAAX;IAAcC,WAAW,EAAE;EAA3B,CAA8C;EAAA,IAAXC,MAAW;;EAC5E,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,WAAL;MACE,OAAO;QACLH,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgB;MADpB,CAAP;;IAGF,KAAK,WAAL;MACE,OAAO;QACLA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgB;MADpB,CAAP;;IAGF,KAAK,UAAL;MACE,OAAO;QACLA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgBE,MAAM,CAACE;MAD3B,CAAP;;IAIF;MACE,OAAOL,KAAP;EAfJ;AAiBD,CAlBD;;AAoBA,MAAMM,KAAK,GAAGR,WAAW,CAACC,cAAD,CAAzB;AAEA,eAAeO,KAAf"},"metadata":{},"sourceType":"module"}